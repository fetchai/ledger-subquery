enum GovProposalVoteOption {
  EMPTY,
  YES,
  ABSTAIN,
  NO,
  NO_WITH_VETO,
}

enum TxStatus {
  Success
  Error
}

type Block @entity {
  id: ID! # The block header hash
  chainId: String!
  height: BigInt!
  timestamp: String!
}

type Transaction @entity {
  id: ID!
  block: Block!
  gasUsed: BigInt!
  gasWanted: BigInt!
  fees: String!
  memo: String
  status: TxStatus!
  log: String!
  timeoutHeight: BigInt
}

type Message @entity {
  id: ID!
  json: String!
  transaction: Transaction!
  block: Block!
}

type Event @entity {
  id: ID!
  json: String!
  log: String!
  transaction: Transaction!
  block: Block!
}

type ExecuteContractMessage @entity {
  id: ID!
  sender: String!
  contract: String!
  funds: String!
  message: Message!
  transaction: Transaction!
  block: Block!
}

type GovProposalVote @entity {
  id: ID!
  proposalId: String!
  voterAddress: String!
  option: GovProposalVoteOption!
  message: Message!
  transaction: Transaction!
  block: Block!
  #  TODO:
  #  weightedOptions: []
}

type DistDelegatorClaim @entity {
  id: ID!
  delegatorAddress: String!
  validatorAddress: String!
  message: Message!
  transaction: Transaction!
  block: Block!
  # TODO:
  #  validator: Validator!
  # TODO: introduced in cosmos-sdk (baseline) v0.46
  #  amount: BigInt!
  #  denom: String!
}

type LegacyBridgeSwap @entity {
  id: ID! # id field is always required and must look like this
  destination: String!
  amount: BigInt!
  denom: String!
  message: Message!
  transaction: Transaction!
  block: Block!
}
