{"version":3,"file":"object.js","sourceRoot":"","sources":["../../src/utils/object.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,mCAA4D;AAE5D,SAAgB,MAAM,CACpB,MAAe,EACf,GAAa,EACb,IAAe;IAEf,OAAO,IAAA,mBAAU,EAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAC1D,IAAA,oBAAW,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAC5C,CAAC;AACJ,CAAC;AARD,wBAQC;AAED,SAAgB,kBAAkB,CAAC,MAAc;IAC/C,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAC/B,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,iCACZ,MAAM,KACT,CAAC,IAAA,kBAAS,EAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAC7B,EACF,EAAE,CACH,CAAC;AACJ,CAAC;AARD,gDAQC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { assignWith, camelCase, isUndefined } from 'lodash';\n\nexport function assign<TObject, TSource1, TSource2>(\n  target: TObject,\n  src: TSource1,\n  src2?: TSource2,\n): TObject & TSource1 & TSource2 {\n  return assignWith(target, src, src2, (objValue, srcValue) =>\n    isUndefined(srcValue) ? objValue : srcValue,\n  );\n}\n\nexport function camelCaseObjectKey(object: object) {\n  return Object.keys(object).reduce(\n    (result, key) => ({\n      ...result,\n      [camelCase(key)]: object[key],\n    }),\n    {},\n  );\n}\n"]}