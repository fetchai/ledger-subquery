{"version":3,"file":"mmrQuery.controller.js","sourceRoot":"","sources":["../../src/meta/mmrQuery.controller.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;;;;AAEtC,2CAAoE;AACpE,wDAAoD;AACpD,wEAAoE;AAEpE,MAAM,mBAAmB,GAAG,IAAI,0CAAmB,EAAE,CAAC;AAGtD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAI9C,KAAK,CAAC,YAAY,CAAU,MAAM;QAChC,2CAA2C;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAID,KAAK,CAAC,iBAAiB,CAAU,MAAM;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;IAC7C,CAAC;IAID,KAAK,CAAC,MAAM,CAAU,MAAM;QAC1B,2CAA2C;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;IAID,KAAK,CAAC,WAAW,CAAU,MAAM;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACzD,CAAC;CACF,CAAA;AAvBC;IAFC,IAAA,YAAG,EAAC,QAAQ,CAAC;IACb,IAAA,mBAAU,EAAC,mBAAmB,CAAC;IACZ,WAAA,IAAA,cAAK,GAAE,CAAA;;;;sDAG1B;AAID;IAFC,IAAA,YAAG,EAAC,cAAc,CAAC;IACnB,IAAA,mBAAU,EAAC,mBAAmB,CAAC;IACP,WAAA,IAAA,cAAK,GAAE,CAAA;;;;2DAE/B;AAID;IAFC,IAAA,YAAG,EAAC,cAAc,CAAC;IACnB,IAAA,mBAAU,EAAC,mBAAmB,CAAC;IAClB,WAAA,IAAA,cAAK,GAAE,CAAA;;;;gDAGpB;AAID;IAFC,IAAA,YAAG,EAAC,oBAAoB,CAAC;IACzB,IAAA,mBAAU,EAAC,mBAAmB,CAAC;IACb,WAAA,IAAA,cAAK,GAAE,CAAA;;;;qDAEzB;AA3BU,kBAAkB;IAD9B,IAAA,mBAAU,EAAC,MAAM,CAAC;qCAEe,wBAAU;GAD/B,kBAAkB,CA4B9B;AA5BY,gDAAkB","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Controller, Get, Param, UseFilters } from '@nestjs/common';\nimport { MmrService } from '../indexer/mmr.service';\nimport { MmrExceptionsFilter } from '../utils/mmr-exception.filter';\n\nconst mmrExceptionsFilter = new MmrExceptionsFilter();\n\n@Controller('mmrs')\nexport class MmrQueryController {\n  constructor(private mmrService: MmrService) {}\n\n  @Get('latest')\n  @UseFilters(mmrExceptionsFilter)\n  async getLatestMmr(@Param() params) {\n    // eslint-disable-next-line no-return-await\n    return this.mmrService.getLatestMmr();\n  }\n\n  @Get('latest/proof')\n  @UseFilters(mmrExceptionsFilter)\n  async getLatestMmrProof(@Param() params) {\n    return this.mmrService.getLatestMmrProof();\n  }\n\n  @Get(':blockHeight')\n  @UseFilters(mmrExceptionsFilter)\n  async getMmr(@Param() params) {\n    // eslint-disable-next-line no-return-await\n    return this.mmrService.getMmr(params.blockHeight);\n  }\n\n  @Get(':blockHeight/proof')\n  @UseFilters(mmrExceptionsFilter)\n  async getMmrProof(@Param() params) {\n    return this.mmrService.getMmrProof(params.blockHeight);\n  }\n}\n"]}