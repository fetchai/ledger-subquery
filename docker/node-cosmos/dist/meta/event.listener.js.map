{"version":3,"file":"event.listener.js","sourceRoot":"","sources":["../../src/meta/event.listener.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { InjectMetric } from '@willsoto/nestjs-prometheus';\nimport { Gauge } from 'prom-client';\nimport {\n  BestBlockPayload,\n  EventPayload,\n  IndexerEvent,\n  ProcessBlockPayload,\n  TargetBlockPayload,\n} from '../indexer/events';\n\nexport class MetricEventListener {\n  private skipDictionaryCount = 0;\n\n  constructor(\n    @InjectMetric('subql_indexer_api_connected')\n    private apiConnectedMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_injected_api_connected')\n    private injectedApiConnectedMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_block_queue_size')\n    private blockQueueSizeMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_blocknumber_queue_size')\n    private blocknumberQueueSizeMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_processing_block_height')\n    private processingBlockHeight: Gauge<string>,\n    @InjectMetric('subql_indexer_processed_block_height')\n    private processedBlockHeight: Gauge<string>,\n    @InjectMetric('subql_indexer_target_block_height')\n    private targetHeightMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_best_block_height')\n    private bestHeightMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_using_dictionary')\n    private usingDictionaryMetric: Gauge<string>,\n    @InjectMetric('subql_indexer_skip_dictionary_count')\n    private skipDictionaryCountMetric: Gauge<string>,\n  ) {}\n\n  @OnEvent(IndexerEvent.ApiConnected)\n  handleApiConnected({ value }: EventPayload<number>) {\n    this.apiConnectedMetric.set(value);\n  }\n\n  @OnEvent(IndexerEvent.InjectedApiConnected)\n  handleInjectedApiConnected({ value }: EventPayload<number>) {\n    this.injectedApiConnectedMetric.set(value);\n  }\n\n  @OnEvent(IndexerEvent.BlockQueueSize)\n  handleBlockQueueSizeMetric({ value }: EventPayload<number>) {\n    this.blockQueueSizeMetric.set(value);\n  }\n\n  @OnEvent(IndexerEvent.BlocknumberQueueSize)\n  handleBlocknumberQueueSizeMetric({ value }: EventPayload<number>) {\n    this.blocknumberQueueSizeMetric.set(value);\n  }\n\n  @OnEvent(IndexerEvent.BlockProcessing)\n  handleProcessingBlock(blockPayload: ProcessBlockPayload) {\n    this.processingBlockHeight.set(blockPayload.height);\n  }\n\n  @OnEvent(IndexerEvent.BlockTarget)\n  handleTargetBlock(blockPayload: TargetBlockPayload) {\n    this.targetHeightMetric.set(blockPayload.height);\n  }\n\n  @OnEvent(IndexerEvent.BlockBest)\n  handleBestBlock(blockPayload: BestBlockPayload) {\n    this.bestHeightMetric.set(blockPayload.height);\n  }\n\n  @OnEvent(IndexerEvent.UsingDictionary)\n  handleUsingDictionary({ value }: EventPayload<number>) {\n    this.usingDictionaryMetric.set(value);\n  }\n\n  @OnEvent(IndexerEvent.SkipDictionary)\n  handleSkipDictionary() {\n    this.skipDictionaryCount += 1;\n    this.skipDictionaryCountMetric.set(this.skipDictionaryCount);\n  }\n}\n"]}