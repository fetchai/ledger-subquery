{"version":3,"file":"Subquery.entity.js","sourceRoot":"","sources":["../../src/entities/Subquery.entity.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,yCAAsE;AAyBtE,SAAgB,eAAe,CAAC,SAAoB;IAClD,OAAqB,SAAS,CAAC,MAAM,CACnC,UAAU,EACV;QACE,EAAE,EAAE;YACF,IAAI,EAAE,qBAAS,CAAC,OAAO;YACvB,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,IAAI;SACjB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;YACtB,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;SACb;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,qBAAS,CAAC,MAAM;YACtB,SAAS,EAAE,KAAK;SACjB;QACD,OAAO,EAAE;YACP,IAAI,EAAE,qBAAS,CAAC,OAAO;YACvB,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,CAAC;SAChB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;YACtB,SAAS,EAAE,KAAK;SACjB;QACD,eAAe,EAAE;YACf,IAAI,EAAE,qBAAS,CAAC,OAAO;YACvB,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,CAAC;SAChB;QACD,OAAO,EAAE;YACP,IAAI,EAAE,qBAAS,CAAC,MAAM;YACtB,SAAS,EAAE,IAAI;SAChB;KACF,EACD,EAAE,WAAW,EAAE,IAAI,EAAE,CACtB,CAAC;AACJ,CAAC;AAvCD,0CAuCC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { BuildOptions, DataTypes, Model, Sequelize } from 'sequelize';\n\ninterface SubqueryModelAttributes extends SubqueryCreationAttributes {\n  id: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\ninterface SubqueryCreationAttributes {\n  name: string;\n  dbSchema: string;\n  version?: string;\n  hash: string;\n  nextBlockHeight?: number;\n  network: string;\n}\n\nexport interface SubqueryModel\n  extends Model<SubqueryModelAttributes, SubqueryCreationAttributes>,\n    SubqueryModelAttributes {}\n\nexport type SubqueryRepo = typeof Model & {\n  new (values?: unknown, options?: BuildOptions): SubqueryModel;\n};\n\nexport function SubqueryFactory(sequelize: Sequelize): SubqueryRepo {\n  return <SubqueryRepo>sequelize.define(\n    'Subquery',\n    {\n      id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n      },\n      name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true,\n      },\n      dbSchema: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      version: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 0,\n      },\n      hash: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      nextBlockHeight: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 1,\n      },\n      network: {\n        type: DataTypes.STRING,\n        allowNull: true,\n      },\n    },\n    { underscored: true },\n  );\n}\n"]}