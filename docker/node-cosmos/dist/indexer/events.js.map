{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/indexer/events.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,IAAY,YAYX;AAZD,WAAY,YAAY;IACtB,8CAA8B,CAAA;IAC9B,+DAA+C,CAAA;IAC/C,mDAAmC,CAAA;IACnC,+CAA+B,CAAA;IAC/B,2DAA2C,CAAA;IAC3C,mDAAmC,CAAA;IACnC,+DAA+C,CAAA;IAC/C,oDAAoC,CAAA;IACpC,oDAAoC,CAAA;IACpC,kDAAkC,CAAA;IAClC,+BAAe,CAAA;AACjB,CAAC,EAZW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAYvB","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum IndexerEvent {\n  ApiConnected = 'api_connected',\n  InjectedApiConnected = 'injected_api_connected',\n  BlockTarget = 'block_target_height',\n  BlockBest = 'block_best_height',\n  BlockProcessing = 'block_processing_height',\n  BlockQueueSize = 'block_queue_size',\n  BlocknumberQueueSize = 'blocknumber_queue_size',\n  NetworkMetadata = 'network_metadata',\n  UsingDictionary = 'using_dictionary',\n  SkipDictionary = 'skip_dictionary',\n  Ready = 'ready',\n}\n\nexport interface ProcessBlockPayload {\n  height: number;\n  timestamp: number;\n}\n\nexport interface TargetBlockPayload {\n  height: number;\n}\n\nexport interface BestBlockPayload {\n  height: number;\n}\nexport interface EventPayload<T> {\n  value: T;\n}\n\nexport interface NetworkMetadataPayload {\n  chainId: string;\n}\n\nexport interface MmrPayload {\n  offset: number;\n  height: number;\n  hash: string; //the node hash\n  mmrRoot: string;\n}\n\nexport interface MmrProof {\n  digest: string;\n  leafLength: number;\n  nodes: MmrNode[];\n}\n\nexport interface MmrNode {\n  node: string;\n  hash: string;\n}\n"]}