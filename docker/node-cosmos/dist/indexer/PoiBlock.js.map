{"version":3,"file":"PoiBlock.js","sourceRoot":"","sources":["../../src/indexer/PoiBlock.ts"],"names":[],"mappings":";;;AAAA,gEAAgE;AAChE,sCAAsC;AACtC,yCAAyC;AACzC,yCAAgF;AAChF,uDAAoD;AAGpD,MAAM,YAAY,GAAG,CACnB,EAAU,EACV,cAAmC,EACnC,iBAA6B,EAC7B,UAAsB,EACtB,SAAiB,EACL,EAAE;IACd,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,IAAI,CAAC,iBAAiB,IAAI,CAAC,SAAS,EAAE;QAC9D,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;KAC/D;IACD,OAAO,IAAA,yBAAW,EAChB,IAAA,gBAAS,EACP,IAAA,kBAAW,EAAC,EAAE,CAAC,EACf,cAAc,EACd,iBAAiB,EACjB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EACtB,UAAU,CACX,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAa,QAAQ;IASnB,YACE,EAAU,EACV,cAA0B,EAC1B,IAAgB,EAChB,UAAsB,EACtB,iBAA6B,EAC7B,SAAiB;QAEjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,MAAM,CACX,EAAU,EACV,cAAmC,EACnC,iBAA6B,EAC7B,UAAsB,EACtB,SAAiB;QAEjB,MAAM,aAAa,GAAG,YAAY,CAChC,EAAE,EACF,cAAc,EACd,iBAAiB,EACjB,UAAU,EACV,SAAS,CACV,CAAC;QACF,IAAI,eAA2B,CAAC;QAChC,IAAI,IAAA,YAAK,EAAC,cAAc,CAAC,EAAE;YACzB,eAAe,GAAG,IAAA,eAAQ,EAAC,cAAc,CAAC,CAAC;SAC5C;aAAM,IAAI,IAAA,YAAK,EAAC,cAAc,CAAC,EAAE;YAChC,eAAe,GAAG,cAAc,CAAC;SAClC;QACD,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAC3B,EAAE,EACF,eAAe,EACf,aAAa,EACb,UAAU,EACV,iBAAiB,EACjB,SAAS,CACV,CAAC;QACF,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAvDD,4BAuDC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line header/header\nimport { u8aConcat, numberToU8a, hexToU8a, isHex, isU8a } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { ProofOfIndex } from './entities/Poi.entity';\n\nconst poiBlockHash = (\n  id: number,\n  chainBlockHash: string | Uint8Array,\n  operationHashRoot: Uint8Array,\n  parentHash: Uint8Array,\n  projectId: string,\n): Uint8Array => {\n  if (!id || !chainBlockHash || !operationHashRoot || !projectId) {\n    throw new Error('Poof of index: can not generate block hash');\n  }\n  return blake2AsU8a(\n    u8aConcat(\n      numberToU8a(id),\n      chainBlockHash,\n      operationHashRoot,\n      Buffer.from(projectId),\n      parentHash,\n    ),\n  );\n};\n\nexport class PoiBlock implements ProofOfIndex {\n  readonly id: number;\n  readonly chainBlockHash: Uint8Array;\n  readonly hash: Uint8Array;\n  readonly parentHash: Uint8Array;\n  readonly operationHashRoot: Uint8Array;\n  mmrRoot: Uint8Array;\n  readonly projectId: string;\n\n  constructor(\n    id: number,\n    chainBlockHash: Uint8Array,\n    hash: Uint8Array,\n    parentHash: Uint8Array,\n    operationHashRoot: Uint8Array,\n    projectId: string,\n  ) {\n    this.id = id;\n    this.chainBlockHash = chainBlockHash;\n    this.hash = hash;\n    this.parentHash = parentHash;\n    this.operationHashRoot = operationHashRoot;\n    this.projectId = projectId;\n  }\n\n  static create(\n    id: number,\n    chainBlockHash: string | Uint8Array,\n    operationHashRoot: Uint8Array,\n    parentHash: Uint8Array,\n    projectId: string,\n  ): PoiBlock {\n    const _poiBlockHash = poiBlockHash(\n      id,\n      chainBlockHash,\n      operationHashRoot,\n      parentHash,\n      projectId,\n    );\n    let _chainBlockHash: Uint8Array;\n    if (isHex(chainBlockHash)) {\n      _chainBlockHash = hexToU8a(chainBlockHash);\n    } else if (isU8a(chainBlockHash)) {\n      _chainBlockHash = chainBlockHash;\n    }\n    const poiBlock = new PoiBlock(\n      id,\n      _chainBlockHash,\n      _poiBlockHash,\n      parentHash,\n      operationHashRoot,\n      projectId,\n    );\n    return poiBlock;\n  }\n}\n"]}