{"version":3,"file":"indexer.module.js","sourceRoot":"","sources":["../../src/indexer/indexer.module.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;AAEtC,2CAAwC;AACxC,yDAAsD;AACtD,kEAA+D;AAC/D,+CAA2C;AAC3C,+CAA2C;AAC3C,2DAAuD;AACvD,6DAAyD;AACzD,iEAA4D;AAC5D,6DAAwD;AACxD,mDAA+C;AAC/C,uDAAmD;AACnD,+CAA2C;AAC3C,+CAA2C;AAC3C,uDAAmD;AACnD,uDAAmD;AACnD,mDAA+C;AA+B/C,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG,CAAA;AAAhB,aAAa;IA7BzB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE,CAAC,oBAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,SAAS,EAAE;YACT,gCAAc;YACd,4BAAY;YACZ;gBACE,OAAO,EAAE,wBAAU;gBACnB,UAAU,EAAE,KAAK,EACf,OAAwB,EACxB,YAA2B,EAC3B,EAAE;oBACF,MAAM,UAAU,GAAG,IAAI,wBAAU,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;oBACzD,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;oBACxB,OAAO,UAAU,CAAC;gBACpB,CAAC;gBACD,MAAM,EAAE,CAAC,iCAAe,EAAE,6BAAa,CAAC;aACzC;YACD,4BAAY;YACZ,oCAAgB;YAChB,sCAAiB;YACjB,gCAAc;YACd,yCAAkB;YAClB,qCAAgB;YAChB,wBAAU;YACV,wBAAU;YACV,gCAAc;SACf;QACD,OAAO,EAAE,CAAC,4BAAY,EAAE,wBAAU,CAAC;KACpC,CAAC;GACW,aAAa,CAAG;AAAhB,sCAAa","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Module } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { SubqueryProject } from '../configure/SubqueryProject';\nimport { DbModule } from '../db/db.module';\nimport { ApiService } from './api.service';\nimport { BenchmarkService } from './benchmark.service';\nimport { DictionaryService } from './dictionary.service';\nimport { DsProcessorService } from './ds-processor.service';\nimport { DynamicDsService } from './dynamic-ds.service';\nimport { FetchService } from './fetch.service';\nimport { IndexerManager } from './indexer.manager';\nimport { MmrService } from './mmr.service';\nimport { PoiService } from './poi.service';\nimport { ProjectService } from './project.service';\nimport { SandboxService } from './sandbox.service';\nimport { StoreService } from './store.service';\n\n@Module({\n  imports: [DbModule.forFeature(['Subquery'])],\n  providers: [\n    IndexerManager,\n    StoreService,\n    {\n      provide: ApiService,\n      useFactory: async (\n        project: SubqueryProject,\n        eventEmitter: EventEmitter2,\n      ) => {\n        const apiService = new ApiService(project, eventEmitter);\n        await apiService.init();\n        return apiService;\n      },\n      inject: [SubqueryProject, EventEmitter2],\n    },\n    FetchService,\n    BenchmarkService,\n    DictionaryService,\n    SandboxService,\n    DsProcessorService,\n    DynamicDsService,\n    PoiService,\n    MmrService,\n    ProjectService,\n  ],\n  exports: [StoreService, MmrService],\n})\nexport class IndexerModule {}\n"]}