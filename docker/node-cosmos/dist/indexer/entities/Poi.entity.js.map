{"version":3,"file":"Poi.entity.js","sourceRoot":"","sources":["../../../src/indexer/entities/Poi.entity.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,yCAAsE;AAkBtE,SAAgB,UAAU,CAAC,SAAoB,EAAE,MAAc;IAC7D,OAAgB,SAAS,CAAC,MAAM,CAC9B,MAAM,EACN;QACE,EAAE,EAAE;YACF,IAAI,EAAE,qBAAS,CAAC,OAAO;YACvB,UAAU,EAAE,IAAI;SACjB;QACD,cAAc,EAAE;YACd,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;SACb;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;SACb;QACD,UAAU,EAAE;YACV,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;SACb;QACD,iBAAiB,EAAE;YACjB,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,SAAS,EAAE,KAAK;SACjB;QACD,OAAO,EAAE;YACP,IAAI,EAAE,qBAAS,CAAC,IAAI;YACpB,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,IAAI;SACb;QACD,SAAS,EAAE;YACT,IAAI,EAAE,qBAAS,CAAC,MAAM;YACtB,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,GAAG;SAClB;KACF,EACD;QACE,eAAe,EAAE,IAAI;QACrB,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;KAChC,CACF,CAAC;AACJ,CAAC;AA5CD,gCA4CC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport { BuildOptions, DataTypes, Model, Sequelize } from 'sequelize';\n\nexport interface ProofOfIndex {\n  id: number; //blockHeight\n  chainBlockHash: Uint8Array;\n  hash: Uint8Array;\n  parentHash?: Uint8Array;\n  operationHashRoot: Uint8Array;\n  mmrRoot?: Uint8Array;\n  projectId: string;\n}\n\nexport interface PoiModel extends Model<ProofOfIndex>, ProofOfIndex {}\n\nexport type PoiRepo = typeof Model & {\n  new (values?: unknown, options?: BuildOptions): PoiModel;\n};\n\nexport function PoiFactory(sequelize: Sequelize, schema: string): PoiRepo {\n  return <PoiRepo>sequelize.define(\n    `_poi`,\n    {\n      id: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n      },\n      chainBlockHash: {\n        type: DataTypes.BLOB,\n        allowNull: false,\n        unique: true,\n      },\n      hash: {\n        type: DataTypes.BLOB,\n        allowNull: false,\n        unique: true,\n      },\n      parentHash: {\n        type: DataTypes.BLOB,\n        allowNull: false,\n        unique: true,\n      },\n      operationHashRoot: {\n        type: DataTypes.BLOB,\n        allowNull: false,\n      },\n      mmrRoot: {\n        type: DataTypes.BLOB,\n        allowNull: true,\n        unique: true,\n      },\n      projectId: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        defaultValue: '0',\n      },\n    },\n    {\n      freezeTableName: true,\n      schema: schema,\n      indexes: [{ fields: ['hash'] }],\n    },\n  );\n}\n"]}