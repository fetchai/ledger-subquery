version: "3"

services:
  postgres:
    image: bryanchriswhite/ledger-subquery-postgres:stable
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "subquery"
      POSTGRES_PASSWORD: "subquery"
      POSTGRES_DB: "subquery"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U subquery"]
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node:
    build:
      context: .
      dockerfile: ./docker/node.dockerfile
    depends_on:
      "postgres":
        condition: service_healthy
      "fetch-node":
        condition: service_started
    restart: always
    environment:
      DB_USER: "subquery"
      DB_PASS: "subquery"
      DB_DATABASE: "subquery"
      DB_HOST: postgres
      DB_PORT: 5432
      START_BLOCK: "1"
      NETWORK_ENDPOINT: "http://fetch-node:26657"
      CHAIN_ID: "fetchchain"
    command:
      - -f=/app
      - --db-schema=app
      - --batch-size=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    build:
      context: .
      dockerfile: ./docker/api.dockerfile
    ports:
      - 3000:3000
    depends_on:
      "postgres":
        condition: service_healthy
      "subquery-node":
        condition: service_started
    restart: always
    environment:
      DB_USER: "subquery"
      DB_PASS: "subquery"
      DB_DATABASE: "subquery"
      DB_HOST: postgres
      DB_PORT: 5432
    entrypoint: ["/sbin/tini", "--", "yarn", "start:prod"]
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000

  fetch-node:
    image: fetchai/fetchd:0.10.6
    entrypoint: ["sh", "-c", "/scripts/start_cosmos_node.sh"]
    environment:
      BINARY: fetchd
      DENOM: atestfet
      MONIKER: fetchnode
      CHAIN_ID: fetchchain
      SET_CUSTOM_CONSENSUS_PARAMS: 1
      VALIDATOR_MNEMONIC: "nut grocery slice visit barrel peanut tumble patch slim logic install evidence fiction shield rich brown around arrest fresh position animal butter forget cost"
      EXTRA_GENESIS_ACCOUNTS: >
        fetch1vmvxe6xgkqfe9fsp63p4f5pgp0jqe7h6505pnk:1000000000000000000000000atestfet
        fetch1ka9j6a8u0lnt8rm86d9ntyurm39jylcu3dstng:1000000000000000000000000atestfet
        fetch108g2rh9e8r65hq69dm9ca76ttmke3utdy983mf:1000000000000000000000000atestfet
    volumes:
      - ./scripts/start_cosmos_node.sh:/scripts/start_cosmos_node.sh:ro
    ports:
      - 1317:1317
      - 26657:26657
      - 9090:9090
    expose:
      - 26656
  wasm-node:
    image: cosmwasm/wasmd:v0.24.0
    entrypoint: ["sh", "-c", "/scripts/start_cosmos_node.sh"]
    environment:
      BINARY: wasmd
      DENOM: ustake
      MONIKER: wasmnode
      CHAIN_ID: wasmchain
      EXTRA_GENESIS_ACCOUNTS: >
        wasm132mmds9flytwh4grswde8zmcuwnd9yc4vdftf6:1000000000000000000000000ustake
        wasm1wurz7uwmvchhc8x0yztc7220hxs9jxdj53m3s0:1000000000000000000000000ustake
    volumes:
      - ./scripts/start_cosmos_node.sh:/scripts/start_cosmos_node.sh:ro
    ports:
      - 11317:1317
      - 36657:26657
      - 19090:9090
    expose:
      - 26656
  hermes:
    build: ./docker/hermes
    entrypoint: ["sh", "-c", "/scripts/start_hermes.sh"]
    depends_on:
      "wasm-node":
        condition: service_started
      "fetch-node":
        condition: service_started
    restart: always
    volumes:
      - ./docker/hermes/config.toml:/root/.hermes/config.toml:ro
      - ./scripts/start_hermes.sh:/scripts/start_hermes.sh:ro
    environment:
      # fetch108g2rh9e8r65hq69dm9ca76ttmke3utdy983mf
      FETCH_RELAYER_MNEMONIC: "length panther shoe gun grief river state boy note lunar input chest iron mirror elephant flip ripple scout reflect orchard frame borrow radio total"
      # wasm132mmds9flytwh4grswde8zmcuwnd9yc4vdftf6
      WASM_RELAYER_MNEMONIC: "all expect burger grit believe forest match math holiday polar roof soccer thank focus note lion gesture dream bounce pony whip scale group refuse"
    expose:
      - 3000 # REST API https://hermes.informal.systems/rest-api.html#endpoints
      - 3001 # prometheus telemetry
