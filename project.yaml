specVersion: 1.0.0
name: juno-subql-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node-cosmos"
    version: ">=0.1.0"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  Fetch ledger SubQuery project
repository: https://github.com/fetchai/ledger-subquery
schema:
  file: ./schema.graphql

network:
  chainId: fetchhub-4
  # You must connect to an archive (non-pruned) node
  endpoint: https://rpc-fetchhub.fetch.ai
  # Using a dictionary can massively improve indexing speed
#  dictionary: https://api.subquery.network/sq/subquery/cosmos-juno-dictionary

dataSources:
  - kind: cosmos/Runtime
    startBlock: 5300201 # first block on fetchhub-4
    #chainTypes: # This is a beta feature that allows support for any Cosmos chain by importing the correct protobuf messages
    #  cosmos.slashing.v1beta1:
    #    file: "./proto/cosmos/slashing/v1beta1/tx.proto"
    #    messages:
    #     - "MsgUnjail"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleBlock
          kind: cosmos/BlockHandler
        - handler: handleTransaction
          kind: cosmos/TransactionHandler
        - handler: handleGovProposalVote
          kind: cosmos/MessageHandler
          filter:
            type: "/cosmos.gov.v1beta1.MsgVote"
        - handler: handleDistDelegatorClaim
          kind: cosmos/MessageHandler
          filter:
            type: "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
        - handler: handleLegacyBridgeSwap
          kind: cosmos/MessageHandler
          filter:
            type: "/cosmwasm.wasm.v1.MsgExecuteContract"
            # Filter to only messages with the vote function call
            contractCall: "swap" # The name of the contract function that was called
            values: # This is the specific smart contract that we are subscribing to
              contract: "fetch1qxxlalvsdjd07p07y3rc5fu6ll8k4tmetpha8n"
